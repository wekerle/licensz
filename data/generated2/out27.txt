Verification of protocol specifications with separation logic
Tibor Kiss, Florin Cr\u{a}ciun, Bazil P\^{a}rv
8
F
session types, separation Logic, verification, pi calculus, linear logic, hoare logic
session type (614), resp buy (290), separation logic (240), session type specification (206), session type predicate (126), computer science (120), verification rule (120), bconn nsend (110), external choice (90), programming language (90), internal choice (80), protocol specification (60), post condition (60), distributed system (60), type system (50), hoare logic (50), static verification (50), specification language (50), projection function (50), multiparty session type (47), object oriented programming (47), int price getprice (47), general purpose imperative programming language (46), dynamic verification (40), purchasing protocol (40), control flow (40), structured communication based programming (40), communication oriented control flow (40), shared mutable data structure (40), automated verification (40),
Intelligent Systems
Despite their popularity, distributed programs remain a major challenge for the computer software verification. The need for methods for ensuring safe interactions in such software systems is recognized. In the last few years, several new approaches have been proposed to solve the problem. Recent works have focused on developing behavior type systems to enforce the correct implementation of protocols, but this type systems are developed for languages with first class primitives for linear communication channels and communication-oriented control flow. In general for GPLs(general purpose programming languages), it is difficult to guarantee the correct implementation of protocol. In this paper, we propose to present an automated verification mechanism to ensure the protocol implementation correctness with respect to a session type specification. To support automatic verification, we design an entailment checking procedure which can handle the verification of a general purpose imperative programming language. Our theory establishes a framework for semantically precise enforcement of protocols, by extending the emph{Separation Logic} static analysis technique with a protocol verification mechanism.